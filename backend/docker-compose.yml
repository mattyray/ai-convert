services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: faceswap_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend (uses regular dev settings)
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8002:8000"  # Only bind to localhost
    environment:
      - DEBUG=True
      - DJANGO_DEBUG=True
      - DJANGO_SETTINGS_MODULE=django_project.settings.dev
      - DATABASE_URL=postgresql://postgres:postgres_password@db:5432/faceswap_db
      - DJANGO_SECRET_KEY=dev-secret-key-change-in-production
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0
      - CLOUDINARY_URL=${CLOUDINARY_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - HUGGINGFACE_SPACE_NAME=${HUGGINGFACE_SPACE_NAME}
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}
      # ðŸ”¥ FIXED: Added Google OAuth credentials
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # ðŸ”¥ NOT a Celery worker
      - IS_CELERY_WORKER=false
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]

  # Celery Worker (uses same dev settings but with special env var)
  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - DEBUG=True
      - DJANGO_DEBUG=True
      - DJANGO_SETTINGS_MODULE=django_project.settings.dev
      - DATABASE_URL=postgresql://postgres:postgres_password@db:5432/faceswap_db
      - DJANGO_SECRET_KEY=dev-secret-key-change-in-production
      - CLOUDINARY_URL=${CLOUDINARY_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - HUGGINGFACE_SPACE_NAME=${HUGGINGFACE_SPACE_NAME}
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}
      # ðŸ”¥ FIXED: Added Google OAuth credentials
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # ðŸ”¥ CRITICAL: Mark this as a Celery worker
      - IS_CELERY_WORKER=true
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["celery", "-A", "django_project", "worker", "--loglevel=info"]

  # Celery Beat (uses same dev settings but with special env var)
  celery_beat:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - DEBUG=True
      - DJANGO_DEBUG=True
      - DJANGO_SETTINGS_MODULE=django_project.settings.dev
      - DATABASE_URL=postgresql://postgres:postgres_password@db:5432/faceswap_db
      - DJANGO_SECRET_KEY=dev-secret-key-change-in-production
      - CLOUDINARY_URL=${CLOUDINARY_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - HUGGINGFACE_SPACE_NAME=${HUGGINGFACE_SPACE_NAME}
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}
      # ðŸ”¥ FIXED: Added Google OAuth credentials
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # ðŸ”¥ CRITICAL: Mark this as a Celery worker
      - IS_CELERY_WORKER=true
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["celery", "-A", "django_project", "beat", "--loglevel=info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data: